SELECT DISTINCT T_BIS_STANDORT_D.PK AS STANDORT_PK,
                rtrim(xmlagg (xmlelement (e, T_BIS_PROBE_B.PK || ',')).extract ('//text()'), ',') PROBEN_PKS,
                T_BIS_PARAMETER_B.PK AS PARAMETER_PK,
                T_BIS_PARAMETER_B.TEXT_TXT PARAMETER_NAME,
                MAX(TO_DATE(T_BIS_PROBE_B.PROBENAHMEDATUM_TXT, 'YYYYMMDD')) AS PROBENAHMEDATUM,
                MIN(T_BIS_MESSWERT_F.WERT_NUM) AS MIN_MESSWERT,
                MAX(T_BIS_MESSWERT_F.WERT_NUM) AS MAX_MESSWERT
FROM T_BIS_MESSWERT_F
INNER JOIN T_BIS_PARAMETER_B ON T_BIS_PARAMETER_B.PK = T_BIS_MESSWERT_F.FK_T_BIS_PARAM_B
AND T_BIS_PARAMETER_B.PK IN (%PARAMETER_PKS%)
--INNER JOIN T_BIS_PARAMGRUPPE_D ON T_BIS_PARAMGRUPPE_D.PK = T_BIS_PARAMETER_B.FK_T_BIS_PARAMGRUPPE_D
--AND T_BIS_PARAMGRUPPE_D.PK IN (%PARAMGROUP%)
INNER JOIN T_BIS_PROBE_B ON T_BIS_PROBE_B.PK = T_BIS_MESSWERT_F.FK_T_BIS_PROBE_B
INNER JOIN T_BIS_STANDORT_D ON T_BIS_STANDORT_D.PK = T_BIS_PROBE_B.FK_T_BIS_STANDORT_D
--WHERE T_BIS_MESSWERT_F.WERT_NUM > 0
GROUP BY T_BIS_STANDORT_D.PK,,
         T_BIS_PARAMETER_B.PK,
         T_BIS_PROBE_B.PROBENAHMEDATUM_TXT,
         T_BIS_PARAMETER_B.TEXT_TXT
ORDER BY T_BIS_STANDORT_D.PK,
         T_BIS_PARAMETER_B.PK


SELECT STANDORT_PK,
  (case (%PARAM_AGGREGATION_EXPRESSION%)
        else PARAMETER_PK end) PARAMETER_PK,
  --rtrim(xmlagg (xmlelement (e, PARAMETER_PK || ',')).extract ('//text()'), ',') PARAMETER_PKS,
  --PROBEN_PKS,
  MIN(MIN_DATE) AS MIN_DATE,
  MAX(MAX_DATE) AS MAX_DATE,
  MIN(MIN_MESSWERT) AS MIN_MESSWERT,
  MAX(MAX_MESSWERT) AS MAX_MESSWERT,
  -- parameter specific normalisation computation
  /*MIN(case when PARAMETER_PK = 'B434' then 0 
      else MIN_MESSWERT end) AS MIN_MESSWERT,
  MAX(case when PARAMETER_PK = 'B434' then 0 
      else MAX_MESSWERT end) AS MAX_MESSWERT,*/
  XMLSerialize(CONTENT XMLRoot(xmlelement("MESSWERTE", XMLATTRIBUTES(STANDORT_PK, PROBEN_PKS), 
    --XMLParse(CONTENT PROBEN_XML WELLFORMED),
    xmlagg (xmlelement (PARAMETER, XMLATTRIBUTES(PARAMETER_PK, PARAMETER_NAME, MAX_DATE, MIN_DATE
      ,MIN_MESSWERT, MAX_MESSWERT)))), VERSION '1.0', STANDALONE YES)) MESSWERTE_XML
FROM (SELECT DISTINCT T_BIS_STANDORT_D.PK AS STANDORT_PK,
          --T_BIS_MESSWERT_F.PK AS BIS_MESSWERT_FK,
          rtrim(xmlagg (xmlelement (PROBEN, T_BIS_PROBE_B.PK || ',')).extract ('//text()'), ',') PROBEN_PKS,
          --xmlagg (xmlelement (PROBEN,  XMLATTRIBUTES(T_BIS_PROBE_B.PK AS PROBE_PK))).getStringVal()  PROBEN_XML,
          T_BIS_PARAMETER_B.PK AS PARAMETER_PK,
          T_BIS_PARAMETER_B.TEXT_TXT PARAMETER_NAME,
          MAX(TO_DATE(T_BIS_PROBE_B.PROBENAHMEDATUM_TXT, 'YYYYMMDD')) AS MAX_DATE,
          MIN(TO_DATE(T_BIS_PROBE_B.PROBENAHMEDATUM_TXT, 'YYYYMMDD')) AS MIN_DATE,
          MIN(T_BIS_MESSWERT_F.WERT_NUM) AS MIN_MESSWERT,
          MAX(T_BIS_MESSWERT_F.WERT_NUM) AS MAX_MESSWERT
    FROM T_BIS_MESSWERT_F
    INNER JOIN T_BIS_PARAMETER_B ON T_BIS_PARAMETER_B.PK = T_BIS_MESSWERT_F.FK_T_BIS_PARAM_B
    --AND T_BIS_PARAMETER_B.PK IN ('BCU1', 'BZN1', 'BPB1')
    INNER JOIN T_BIS_PARAMGRUPPE_D ON T_BIS_PARAMGRUPPE_D.PK = T_BIS_PARAMETER_B.FK_T_BIS_PARAMGRUPPE_D
    AND T_BIS_PARAMGRUPPE_D.PK IN (%PARAMETERGRUPPE_PKS%)
    INNER JOIN T_BIS_PROBE_B ON T_BIS_PROBE_B.PK = T_BIS_MESSWERT_F.FK_T_BIS_PROBE_B
    INNER JOIN T_BIS_STANDORT_D ON T_BIS_STANDORT_D.PK = T_BIS_PROBE_B.FK_T_BIS_STANDORT_D
    WHERE T_BIS_PROBE_B.FK_T_BIS_STANDORT_D = ?
    -- AND ROWNUM <= 10000
    GROUP BY T_BIS_STANDORT_D.PK,
             --T_BIS_MESSWERT_F.PK,
             T_BIS_PARAMETER_B.PK,
             T_BIS_PROBE_B.PROBENAHMEDATUM_TXT,
             T_BIS_PARAMETER_B.TEXT_TXT
    ORDER BY T_BIS_STANDORT_D.PK,
             T_BIS_PARAMETER_B.PK)
GROUP BY STANDORT_PK, PROBEN_PKS, /*PROBEN_XML,*/ 
  (case (%PARAM_AGGREGATION_EXPRESSION%)
        else PARAMETER_PK end)