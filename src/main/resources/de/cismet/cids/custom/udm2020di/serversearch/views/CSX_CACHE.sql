
  CREATE OR REPLACE FORCE VIEW "UIM_DI01"."CSX_CACHE" ("CLASS_ID", "OBJECT_ID", "STRINGREP", "GEOMETRY", "LIGHTWEIGHT_JSON") AS 
  SELECT
  (SELECT ID FROM CS_CLASS WHERE TABLE_NAME = 'EPRTR_INSTALLATION'
  )                              AS class_id,
  EPRTR_INSTALLATION.ID          AS object_id,
  EPRTR_INSTALLATION.NAME        AS stringrep,
  GEOM.GEO_FIELD                 AS geometry,
  EPRTR_INSTALLATION.SRC_CONTENT AS lightweight_json
FROM EPRTR_INSTALLATION,
  GEOM
WHERE GEOM.ID = EPRTR_INSTALLATION.GEOMETRY
UNION ALL
SELECT
  (SELECT ID FROM CS_CLASS WHERE TABLE_NAME = 'WAGW_STATION'
  )                              AS class_id,
  WAGW_STATION.ID                AS object_id,
  WAGW_STATION.src_messstelle_pk AS stringrep,
  GEOM.GEO_FIELD                 AS geometry,
  WAGW_STATION.SRC_CONTENT       AS lightweight_json
FROM WAGW_STATION,
  GEOM
WHERE GEOM.ID = WAGW_STATION.GEOMETRY
UNION ALL
SELECT
  (SELECT ID FROM CS_CLASS WHERE TABLE_NAME = 'BORIS_SITE'
  )                      AS class_id,
  BORIS_SITE.ID          AS object_id,
  BORIS_SITE.NAME        AS stringrep,
  GEOM.GEO_FIELD         AS geometry,
  BORIS_SITE.SRC_CONTENT AS lightweight_json
FROM BORIS_SITE,
  GEOM
WHERE GEOM.ID = BORIS_SITE.GEOMETRY
UNION ALL
SELECT
  (SELECT ID FROM CS_CLASS WHERE TABLE_NAME = 'WAOW_STATION'
  )                        AS class_id,
  WAOW_STATION.ID          AS object_id,
  WAOW_STATION.NAME        AS stringrep,
  GEOM.GEO_FIELD           AS geometry,
  WAOW_STATION.SRC_CONTENT AS lightweight_json
FROM WAOW_STATION,
  GEOM
WHERE GEOM.ID = WAOW_STATION.GEOMETRY
UNION ALL
SELECT
  (SELECT ID FROM CS_CLASS WHERE TABLE_NAME = 'MOSS'
  )                AS class_id,
  MOSS.ID          AS object_id,
  MOSS.NAME        AS stringrep,
  GEOM.GEO_FIELD   AS geometry,
  MOSS.SRC_CONTENT AS lightweight_json
FROM MOSS,
  GEOM
WHERE GEOM.ID = MOSS.GEOMETRY WITH READ ONLY;
 

SELECT
  (SELECT ID
   FROM CS_CLASS
   WHERE lower(NAME) = 'boris_site') AS CLASS_ID,
       JT_BORIS_SITE_TAG.BORIS_SITE AS OBJECT_ID,
       JT_BORIS_SITE_TAG.TAG AS TAG_ID,
       MAX(BORIS_SAMPLE_VALUE.MAX_DATE) AS MAX_DATE,
       MIN(BORIS_SAMPLE_VALUE.MAX_DATE) AS MIN_DATE
FROM JT_BORIS_SITE_TAG
INNER JOIN JT_BORIS_SSV ON JT_BORIS_SSV.BORIS_SITE = JT_BORIS_SITE_TAG.BORIS_SITE
INNER JOIN BORIS_SAMPLE_VALUE ON JT_BORIS_SSV.BORIS_SAMPLE_VALUE = BORIS_SAMPLE_VALUE.ID 
GROUP BY JT_BORIS_SITE_TAG.BORIS_SITE, JT_BORIS_SITE_TAG.TAG
--ORDER BY CLASS_ID, OBJECT_ID, TAG_ID)