SELECT STANDORT_PK,
       STANDORTBEZEICHNUNG,
       STANDORTNUMMER,
       LITERATUR,
       INSTITUT,
       HOCHWERT,
       RECHTSWERT,
       XMLSerialize( CONTENT XMLRoot(
        XMLELEMENT("STANDORTPARAMETER", 
            XMLATTRIBUTES(STANDORT_PK), 
            XMLAGG (XMLELEMENT (PARAMETER, 
                XMLATTRIBUTES(STANDORTPARAMETER_PK AS PK, 
                STANDORTPARAMETER_NAME AS NAME) , STANDORTPARAMETER_WERT))) , 
       VERSION '1.0', STANDALONE YES)) AS STANDORTPARAMETER
FROM
  (SELECT DISTINCT STANDORT.PK STANDORT_PK,
                   STANDORT.HOCHWERT_NUM HOCHWERT,
                   STANDORT.RECHTSWERT_NUM RECHTSWERT,
                   MAX(TRIM(BOTH ' '
                            FROM LITERATUR.TITEL_TXT)) AS LITERATUR,
                   MAX(TRIM(BOTH ' '
                            FROM INSTITUTION.INSTITUTBEZ_TXT)) AS INSTITUT,
                   STANDORTPARAMETER.PK STANDORTPARAMETER_PK,
                   STANDORTPARAMETER.TEXT_TXT AS STANDORTPARAMETER_NAME,
                   STANDORTDATEN.WERT_TXT STANDORTPARAMETER_WERT,
     (SELECT T_BIS_STANDORTDATEN_F.WERT_TXT
      FROM T_BIS_STANDORTDATEN_F
      WHERE T_BIS_STANDORTDATEN_F.FK_T_BIS_PARAMETER_B = 'S105'
        AND T_BIS_STANDORTDATEN_F.FK_T_BIS_STANDORT_D = STANDORT.PK
        AND ROWNUM = 1) AS STANDORTNUMMER,
     (SELECT T_BIS_STANDORTDATEN_F.WERT_TXT
      FROM T_BIS_STANDORTDATEN_F
      WHERE T_BIS_STANDORTDATEN_F.FK_T_BIS_PARAMETER_B = 'S100'
        AND T_BIS_STANDORTDATEN_F.FK_T_BIS_STANDORT_D = STANDORT.PK
        AND ROWNUM = 1) AS STANDORTBEZEICHNUNG
   FROM T_BIS_STANDORT_D STANDORT
   INNER JOIN T_BIS_PROBE_B PROBE ON PROBE.FK_T_BIS_STANDORT_D = STANDORT.PK
   INNER JOIN T_BIS_MESSWERT_F MESSWERT ON MESSWERT.FK_T_BIS_PROBE_B = PROBE.PK
   INNER JOIN T_BIS_PARAMETER_B PROBENPARAMETER ON PROBENPARAMETER.PK = MESSWERT.FK_T_BIS_PARAM_B
   AND PROBENPARAMETER.PK IN (%PARAMETER_PKS%)
   INNER JOIN T_BIS_STANDORTDATEN_F STANDORTDATEN ON STANDORTDATEN.FK_T_BIS_STANDORT_D = STANDORT.PK
   INNER JOIN T_BIS_LITERATUR_D LITERATUR ON STANDORTDATEN.FK_T_BIS_LITERATUR_D = LITERATUR.PK
   INNER JOIN T_BIS_INSTITUTION_D INSTITUTION ON LITERATUR.FK_T_BIS_INSTITUTION_D = INSTITUTION.PK
   INNER JOIN T_BIS_PARAMETER_B STANDORTPARAMETER ON STANDORTDATEN.FK_T_BIS_PARAMETER_B = STANDORTPARAMETER.PK
   GROUP BY STANDORT.PK,
            STANDORTPARAMETER.TEXT_TXT,
            STANDORT.HOCHWERT_NUM,
            STANDORT.RECHTSWERT_NUM,
            STANDORTDATEN.WERT_TXT,
            STANDORTPARAMETER.PK,
            STANDORTDATEN.FK_T_BIS_PARAMETER_B
   ORDER BY STANDORT.PK)
GROUP BY STANDORT_PK,
         STANDORTBEZEICHNUNG,
         STANDORTNUMMER,
         LITERATUR,
         INSTITUT,
         HOCHWERT,
         RECHTSWERT;
SELECT STANDORTE.STANDORT_PK,
       STANDORTE.STANDORTBEZEICHNUNG,
       STANDORTE.STANDORTNUMMER,
       STANDORTE.LITERATUR,
       STANDORTE.INSTITUT,
       STANDORTE.HOCHWERT,
       STANDORTE.RECHTSWERT,
       XMLSerialize( CONTENT XMLRoot(XMLELEMENT("STANDORT",  
         XMLATTRIBUTES(STANDORTE.STANDORT_PK, STANDORTE.STANDORTBEZEICHNUNG, 
         STANDORTE.STANDORTNUMMER, STANDORTE.INSTITUT, STANDORTE.HOCHWERT,STANDORTE.RECHTSWERT),
       XMLELEMENT ("STANDORTPARAMETER", XMLATTRIBUTES(STANDORT_PK), xmlagg (xmlelement (PARAMETER, XMLATTRIBUTES(STANDORTPARAMETER_PK AS PK, STANDORTPARAMETER_NAME AS NAME) , STANDORTPARAMETER_WERT))) 
        ,(SELECT 
            XMLELEMENT("PROBENPARAMETER",
             XMLATTRIBUTES(PROBENPARAMETER.STANDORT_PK), xmlagg (xmlelement (
                PARAMETER, XMLATTRIBUTES(PROBENPARAMETER.PARAMETER_PK, 
                PROBENPARAMETER.PARAMETERGRUPPE_PK, PROBENPARAMETER.PARAMETERGRUPPE_NAME), PROBENPARAMETER.PARAMETER_NAME))) 
                 AS PROBENPARAMETER
        FROM
        (SELECT DISTINCT T_BIS_STANDORT_D.PK STANDORT_PK,
            T_BIS_PARAMETER_B.PK PARAMETER_PK, 
            T_BIS_PARAMETER_B.TEXT_TXT PARAMETER_NAME,
            T_BIS_PARAMGRUPPE_D.PK PARAMETERGRUPPE_PK,
            T_BIS_PARAMGRUPPE_D.PARAGRUPPENBEZ_TXT PARAMETERGRUPPE_NAME
        FROM T_BIS_PARAMETER_B
        INNER JOIN T_BIS_PARAMGRUPPE_D ON T_BIS_PARAMGRUPPE_D.PK = T_BIS_PARAMETER_B.FK_T_BIS_PARAMGRUPPE_D
           AND T_BIS_PARAMGRUPPE_D.PK IN (%PARAMETERGRUPPE_PKS%)
        INNER JOIN T_BIS_MESSWERT_F ON T_BIS_MESSWERT_F.FK_T_BIS_PARAM_B = T_BIS_PARAMETER_B.PK
        INNER JOIN T_BIS_PROBE_B ON T_BIS_PROBE_B.PK = T_BIS_MESSWERT_F.FK_T_BIS_PROBE_B
        INNER JOIN T_BIS_STANDORT_D ON T_BIS_STANDORT_D.PK = T_BIS_PROBE_B.FK_T_BIS_STANDORT_D
        GROUP BY T_BIS_STANDORT_D.PK, T_BIS_PARAMETER_B.PK, T_BIS_PARAMETER_B.TEXT_TXT, T_BIS_PARAMGRUPPE_D.PK, T_BIS_PARAMGRUPPE_D.PARAGRUPPENBEZ_TXT
        ORDER BY STANDORT_PK, T_BIS_PARAMETER_B.PK) PROBENPARAMETER
        WHERE PROBENPARAMETER.STANDORT_PK = STANDORTE.STANDORT_PK 
        --AND PROBENPARAMETER.PK IN (%PARAMETER_PKS%)
        GROUP BY PROBENPARAMETER.STANDORT_PK) AS PROBENPARAMETER ), VERSION '1.0', STANDALONE YES)) AS STANDORT_XML
FROM
  (SELECT DISTINCT STANDORT.PK STANDORT_PK,
                   STANDORT.HOCHWERT_NUM HOCHWERT,
                   STANDORT.RECHTSWERT_NUM RECHTSWERT,
                   MAX(TRIM(BOTH ' '
                            FROM LITERATUR.TITEL_TXT)) AS LITERATUR,
                   MAX(TRIM(BOTH ' '
                            FROM INSTITUTION.INSTITUTBEZ_TXT)) AS INSTITUT,
                   STANDORTPARAMETER.PK STANDORTPARAMETER_PK,
                   STANDORTPARAMETER.TEXT_TXT AS STANDORTPARAMETER_NAME,
                   STANDORTDATEN.WERT_TXT STANDORTPARAMETER_WERT,
     (SELECT T_BIS_STANDORTDATEN_F.WERT_TXT
      FROM T_BIS_STANDORTDATEN_F
      WHERE T_BIS_STANDORTDATEN_F.FK_T_BIS_PARAMETER_B = 'S105'
        AND T_BIS_STANDORTDATEN_F.FK_T_BIS_STANDORT_D = STANDORT.PK
        AND ROWNUM = 1) AS STANDORTNUMMER,
     (SELECT T_BIS_STANDORTDATEN_F.WERT_TXT
      FROM T_BIS_STANDORTDATEN_F
      WHERE T_BIS_STANDORTDATEN_F.FK_T_BIS_PARAMETER_B = 'S100'
        AND T_BIS_STANDORTDATEN_F.FK_T_BIS_STANDORT_D = STANDORT.PK
        AND ROWNUM = 1) AS STANDORTBEZEICHNUNG
   FROM T_BIS_STANDORT_D STANDORT
   INNER JOIN T_BIS_PROBE_B PROBE ON PROBE.FK_T_BIS_STANDORT_D = STANDORT.PK
   INNER JOIN T_BIS_MESSWERT_F MESSWERT ON MESSWERT.FK_T_BIS_PROBE_B = PROBE.PK
   INNER JOIN T_BIS_PARAMETER_B PROBENPARAMETER ON PROBENPARAMETER.PK = MESSWERT.FK_T_BIS_PARAM_B
   --AND PROBENPARAMETER.PK IN (%PARAMETER_PKS%)
   INNER JOIN T_BIS_PARAMGRUPPE_D ON T_BIS_PARAMGRUPPE_D.PK = PROBENPARAMETER.FK_T_BIS_PARAMGRUPPE_D
   AND T_BIS_PARAMGRUPPE_D.PK IN (%PARAMETERGRUPPE_PKS%)
   INNER JOIN T_BIS_STANDORTDATEN_F STANDORTDATEN ON STANDORTDATEN.FK_T_BIS_STANDORT_D = STANDORT.PK
   INNER JOIN T_BIS_LITERATUR_D LITERATUR ON STANDORTDATEN.FK_T_BIS_LITERATUR_D = LITERATUR.PK
   INNER JOIN BORIS_TEST.T_BIS_INSTITUTION_D INSTITUTION ON LITERATUR.FK_T_BIS_INSTITUTION_D = INSTITUTION.PK
   INNER JOIN T_BIS_PARAMETER_B STANDORTPARAMETER ON STANDORTDATEN.FK_T_BIS_PARAMETER_B = STANDORTPARAMETER.PK
   GROUP BY STANDORT.PK,
            STANDORTPARAMETER.TEXT_TXT,
            STANDORT.HOCHWERT_NUM,
            STANDORT.RECHTSWERT_NUM,
            STANDORTDATEN.WERT_TXT,
            STANDORTPARAMETER.PK,
            STANDORTDATEN.FK_T_BIS_PARAMETER_B
   ORDER BY STANDORT.PK) STANDORTE
GROUP BY STANDORTE.STANDORT_PK,
         STANDORTE.STANDORTBEZEICHNUNG,
         STANDORTE.STANDORTNUMMER,
         STANDORTE.LITERATUR,
         STANDORTE.INSTITUT,
         STANDORTE.HOCHWERT,
         STANDORTE.RECHTSWERT
