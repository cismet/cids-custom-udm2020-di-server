SELECT STANDORTE.STANDORT_PK,
       STANDORTE.STANDORTBEZEICHNUNG,
       STANDORTE.STANDORTNUMMER,
       STANDORTE.LITERATUR,
       STANDORTE.INSTITUT,
       STANDORTE.HOCHWERT,
       STANDORTE.RECHTSWERT,
       XMLSerialize( CONTENT XMLRoot(XMLELEMENT("STANDORT",  
         XMLATTRIBUTES(STANDORTE.STANDORT_PK pk, STANDORTE.STANDORTBEZEICHNUNG standortbezeichnung, 
         STANDORTE.STANDORTNUMMER standortnummer, STANDORTE.INSTITUT institut, 
         STANDORTE.LITERATUR literatur, STANDORTE.HOCHWERT hochwert, STANDORTE.RECHTSWERT rechtswert),
        (SELECT XMLELEMENT("proben", xmlagg (xmlelement ("probe", T_BIS_PROBE_B.PK))) AS PROBEN 
            FROM T_BIS_PROBE_B WHERE T_BIS_PROBE_B.FK_T_BIS_STANDORT_D = STANDORTE.STANDORT_PK) AS PROBEN,
        XMLELEMENT ("standortparameter", 
         /*XMLATTRIBUTES(STANDORT_PK),*/
         xmlagg (xmlelement ("standortparameter", 
                XMLATTRIBUTES(STANDORTPARAMETER_PK pk, STANDORTPARAMETER_NAME name, STANDORTPARAMETER_WERT wert)))) 
        ,(SELECT 
            XMLELEMENT("probenparameter",
             /*XMLATTRIBUTES(PROBENPARAMETER.STANDORT_PK),*/ 
                xmlagg (xmlelement ("probenparameter", XMLATTRIBUTES(PROBENPARAMETER.PARAMETER_PK parameterPk, 
                PROBENPARAMETER.PARAMETERGRUPPE_PK parametergruppePk, PROBENPARAMETER.PARAMETERGRUPPE_NAME parametergruppeName, 
                PROBENPARAMETER.PARAMETER_NAME parameterName)))) 
                 AS PROBENPARAMETER
        FROM
        (SELECT DISTINCT T_BIS_STANDORT_D.PK STANDORT_PK,
            T_BIS_PARAMETER_B.PK PARAMETER_PK, 
            T_BIS_PARAMETER_B.TEXT_TXT PARAMETER_NAME,
            T_BIS_PARAMGRUPPE_D.PK PARAMETERGRUPPE_PK,
            T_BIS_PARAMGRUPPE_D.PARAGRUPPENBEZ_TXT PARAMETERGRUPPE_NAME
        FROM T_BIS_PARAMETER_B
        INNER JOIN T_BIS_PARAMGRUPPE_D ON T_BIS_PARAMGRUPPE_D.PK = T_BIS_PARAMETER_B.FK_T_BIS_PARAMGRUPPE_D
           AND T_BIS_PARAMGRUPPE_D.PK IN ('B10000',
                                   'B30000',
                                   'B40000',
                                   'B40100',
                                   'B40200',
                                   'B40300',
                                   'B40400',
                                   'B40500',
                                   'B40600',
                                   'B50000',
                                   'B70000')
        INNER JOIN T_BIS_MESSWERT_F ON T_BIS_MESSWERT_F.FK_T_BIS_PARAM_B = T_BIS_PARAMETER_B.PK
        INNER JOIN T_BIS_PROBE_B ON T_BIS_PROBE_B.PK = T_BIS_MESSWERT_F.FK_T_BIS_PROBE_B
        INNER JOIN T_BIS_STANDORT_D ON T_BIS_STANDORT_D.PK = T_BIS_PROBE_B.FK_T_BIS_STANDORT_D
        GROUP BY T_BIS_STANDORT_D.PK, T_BIS_PARAMETER_B.PK, T_BIS_PARAMETER_B.TEXT_TXT, T_BIS_PARAMGRUPPE_D.PK, T_BIS_PARAMGRUPPE_D.PARAGRUPPENBEZ_TXT
        ORDER BY STANDORT_PK, T_BIS_PARAMETER_B.PK) PROBENPARAMETER
        WHERE PROBENPARAMETER.STANDORT_PK = STANDORTE.STANDORT_PK 
        GROUP BY PROBENPARAMETER.STANDORT_PK) AS PROBENPARAMETER), VERSION '1.0' , STANDALONE YES)) AS STANDORT_XML
FROM
  (SELECT DISTINCT STANDORT.PK STANDORT_PK,
                   STANDORT.HOCHWERT_NUM HOCHWERT,
                   STANDORT.RECHTSWERT_NUM RECHTSWERT,
                   MAX(TRIM(BOTH ' '
                            FROM LITERATUR.TITEL_TXT)) AS LITERATUR,
                   MAX(TRIM(BOTH ' '
                            FROM INSTITUTION.INSTITUTBEZ_TXT)) AS INSTITUT,
                   STANDORTPARAMETER.PK AS STANDORTPARAMETER_PK,
                   STANDORTPARAMETER.TEXT_TXT AS STANDORTPARAMETER_NAME,
                   STANDORTDATEN.WERT_TXT AS STANDORTPARAMETER_WERT,
     (SELECT T_BIS_STANDORTDATEN_F.WERT_TXT
      FROM T_BIS_STANDORTDATEN_F
      WHERE T_BIS_STANDORTDATEN_F.FK_T_BIS_PARAMETER_B = 'S105'
        AND T_BIS_STANDORTDATEN_F.FK_T_BIS_STANDORT_D = STANDORT.PK
        AND ROWNUM = 1) AS STANDORTNUMMER,
     (SELECT T_BIS_STANDORTDATEN_F.WERT_TXT
      FROM T_BIS_STANDORTDATEN_F
      WHERE T_BIS_STANDORTDATEN_F.FK_T_BIS_PARAMETER_B = 'S100'
        AND T_BIS_STANDORTDATEN_F.FK_T_BIS_STANDORT_D = STANDORT.PK
        AND ROWNUM = 1) AS STANDORTBEZEICHNUNG
   FROM T_BIS_STANDORT_D STANDORT
   INNER JOIN T_BIS_PROBE_B PROBE ON PROBE.FK_T_BIS_STANDORT_D = STANDORT.PK
   INNER JOIN T_BIS_MESSWERT_F MESSWERT ON MESSWERT.FK_T_BIS_PROBE_B = PROBE.PK
   INNER JOIN T_BIS_PARAMETER_B PROBENPARAMETER ON PROBENPARAMETER.PK = MESSWERT.FK_T_BIS_PARAM_B
    -- restrict on specific parameters, if required
    --AND PROBENPARAMETER.PK IN ('BCU1','BZN1','BPB1')
   INNER JOIN T_BIS_PARAMGRUPPE_D ON T_BIS_PARAMGRUPPE_D.PK = PROBENPARAMETER.FK_T_BIS_PARAMGRUPPE_D
   AND T_BIS_PARAMGRUPPE_D.PK IN ('B10000',
                                   'B30000',
                                   'B40000',
                                   'B40100',
                                   'B40200',
                                   'B40300',
                                   'B40400',
                                   'B40500',
                                   'B40600',
                                   'B50000',
                                   'B70000')
   INNER JOIN T_BIS_STANDORTDATEN_F STANDORTDATEN ON STANDORTDATEN.FK_T_BIS_STANDORT_D = STANDORT.PK
   INNER JOIN T_BIS_LITERATUR_D LITERATUR ON STANDORTDATEN.FK_T_BIS_LITERATUR_D = LITERATUR.PK
   INNER JOIN BORIS_TEST.T_BIS_INSTITUTION_D INSTITUTION ON LITERATUR.FK_T_BIS_INSTITUTION_D = INSTITUTION.PK
   INNER JOIN T_BIS_PARAMETER_B STANDORTPARAMETER ON STANDORTDATEN.FK_T_BIS_PARAMETER_B = STANDORTPARAMETER.PK
   -- restrict to Tullnerfeld BBox
    WHERE SDO_GEOM.RELATE(
    sdo_geometry('Polygon ((541379 523462, 541379 423907, 657834 423907, 657834 523462, 541379 523462))',31287),
    'contains', STANDORT.LAGE_GPT, 0.10) = 'CONTAINS'
    --AND ROWNUM < 100
    GROUP BY STANDORT.PK,
            STANDORTPARAMETER.TEXT_TXT,
            STANDORT.HOCHWERT_NUM,
            STANDORT.RECHTSWERT_NUM,
            STANDORTPARAMETER.PK,
            STANDORTDATEN.WERT_TXT,
            STANDORTDATEN.FK_T_BIS_PARAMETER_B
   ORDER BY STANDORT.PK) STANDORTE
GROUP BY STANDORTE.STANDORT_PK,
         STANDORTE.STANDORTBEZEICHNUNG,
         STANDORTE.STANDORTNUMMER,
         STANDORTE.LITERATUR,
         STANDORTE.INSTITUT,
         STANDORTE.HOCHWERT,
         STANDORTE.RECHTSWERT